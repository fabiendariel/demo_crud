{"version":3,"sources":["http-common.js","services/TutorialService.js","components/AddTutorial.js","components/Tutorial.js","components/TutorialsList.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","title","AddTutorial","initialTutorialState","description","published","useState","tutorial","setTutorial","submitted","setSubmitted","handleInputChange","event","target","name","value","className","onClick","htmlFor","type","required","onChange","TutorialDataService","then","response","console","log","catch","e","Tutorial","props","currentTutorial","setCurrentTutorial","message","setMessage","useEffect","match","params","updatePublished","status","history","push","TutorialsList","tutorials","setTutorials","currentIndex","setCurrentIndex","searchTitle","setSearchTitle","retrieveTutorials","placeholder","map","index","setActiveTutorial","to","App","href","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.7070cb96.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:8080/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nconst getAll = () => {\r\n  return http.get(\"/tutorials\");\r\n};\r\n\r\nconst get = id => {\r\n  return http.get(`/tutorials/${id}`);\r\n};\r\n\r\nconst create = data => {\r\n  return http.post(\"/tutorials\", data);\r\n};\r\n\r\nconst update = (id, data) => {\r\n  return http.put(`/tutorials/${id}`, data);\r\n};\r\n\r\nconst remove = id => {\r\n  return http.delete(`/tutorials/${id}`);\r\n};\r\n\r\nconst removeAll = () => {\r\n  return http.delete(`/tutorials`);\r\n};\r\n\r\nconst findByTitle = title => {\r\n  return http.get(`/tutorials?title=${title}`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  get,\r\n  create,\r\n  update,\r\n  remove,\r\n  removeAll,\r\n  findByTitle\r\n};","import React, { useState } from \"react\";\r\nimport TutorialDataService from \"../services/TutorialService\";\r\n\r\nconst AddTutorial = () => {\r\n  const initialTutorialState = {\r\n    id: null,\r\n    title: \"\",\r\n    description: \"\",\r\n    published: false\r\n  };\r\n  const [tutorial, setTutorial] = useState(initialTutorialState);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setTutorial({ ...tutorial, [name]: value });\r\n  };\r\n\r\n  const saveTutorial = () => {\r\n    var data = {\r\n      title: tutorial.title,\r\n      description: tutorial.description\r\n    };\r\n\r\n    TutorialDataService.create(data)\r\n      .then(response => {\r\n        setTutorial({\r\n          id: response.data.id,\r\n          title: response.data.title,\r\n          description: response.data.description,\r\n          published: response.data.published\r\n        });\r\n        setSubmitted(true);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const newTutorial = () => {\r\n    setTutorial(initialTutorialState);\r\n    setSubmitted(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"submit-form\">\r\n      {submitted ? (\r\n        <div>\r\n          <h4>You submitted successfully!</h4>\r\n          <button className=\"btn btn-success\" onClick={newTutorial}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              required\r\n              value={tutorial.title}\r\n              onChange={handleInputChange}\r\n              name=\"title\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"description\">Description</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"description\"\r\n              required\r\n              value={tutorial.description}\r\n              onChange={handleInputChange}\r\n              name=\"description\"\r\n            />\r\n          </div>\r\n\r\n          <button onClick={saveTutorial} className=\"btn btn-success\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default AddTutorial;","import React, { useState, useEffect } from \"react\";\r\nimport TutorialDataService from \"../services/TutorialService\";\r\n\r\nconst Tutorial = props => {\r\n  const initialTutorialState = {\r\n    id: null,\r\n    title: \"\",\r\n    description: \"\",\r\n    published: false\r\n  };\r\n  const [currentTutorial, setCurrentTutorial] = useState(initialTutorialState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getTutorial = id => {\r\n    TutorialDataService.get(id)\r\n      .then(response => {\r\n        setCurrentTutorial(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTutorial(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentTutorial({ ...currentTutorial, [name]: value });\r\n  };\r\n\r\n  const updatePublished = status => {\r\n    var data = {\r\n      id: currentTutorial.id,\r\n      title: currentTutorial.title,\r\n      description: currentTutorial.description,\r\n      published: status\r\n    };\r\n\r\n    TutorialDataService.update(currentTutorial.id, data)\r\n      .then(response => {\r\n        setCurrentTutorial({ ...currentTutorial, published: status });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateTutorial = () => {\r\n    TutorialDataService.update(currentTutorial.id, currentTutorial)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setMessage(\"The tutorial was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const deleteTutorial = () => {\r\n    TutorialDataService.remove(currentTutorial.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        props.history.push(\"/tutorials\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentTutorial ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Tutorial</h4>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={currentTutorial.title}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                value={currentTutorial.description}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>\r\n                <strong>Status:</strong>\r\n              </label>\r\n              {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n            </div>\r\n          </form>\r\n\r\n          {currentTutorial.published ? (\r\n            <button\r\n              className=\"badge badge-primary mr-2\"\r\n              onClick={() => updatePublished(false)}\r\n            >\r\n              UnPublish\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"badge badge-primary mr-2\"\r\n              onClick={() => updatePublished(true)}\r\n            >\r\n              Publish\r\n            </button>\r\n          )}\r\n\r\n          <button className=\"badge badge-danger mr-2\" onClick={deleteTutorial}>\r\n            Delete\r\n          </button>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"badge badge-success\"\r\n            onClick={updateTutorial}\r\n          >\r\n            Update\r\n          </button>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Tutorial...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tutorial;","import React, { useState, useEffect } from \"react\";\r\nimport TutorialDataService from \"../services/TutorialService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TutorialsList = () => {\r\n  const [tutorials, setTutorials] = useState([]);\r\n  const [currentTutorial, setCurrentTutorial] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n  const [searchTitle, setSearchTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    retrieveTutorials();\r\n  }, []);\r\n\r\n  const onChangeSearchTitle = e => {\r\n    const searchTitle = e.target.value;\r\n    setSearchTitle(searchTitle);\r\n  };\r\n\r\n  const retrieveTutorials = () => {\r\n    TutorialDataService.getAll()\r\n      .then(response => {\r\n        setTutorials(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrieveTutorials();\r\n    setCurrentTutorial(null);\r\n    setCurrentIndex(-1);\r\n  };\r\n\r\n  const setActiveTutorial = (tutorial, index) => {\r\n    setCurrentTutorial(tutorial);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  const removeAllTutorials = () => {\r\n    TutorialDataService.removeAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const findByTitle = () => {\r\n    TutorialDataService.findByTitle(searchTitle)\r\n      .then(response => {\r\n        setTutorials(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"list row\">\r\n      <div className=\"col-md-8\">\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search by title\"\r\n            value={searchTitle}\r\n            onChange={onChangeSearchTitle}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByTitle}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <h4>Tutorials List</h4>\r\n\r\n        <ul className=\"list-group\">\r\n          {tutorials &&\r\n            tutorials.map((tutorial, index) => (\r\n              <li\r\n                className={\r\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n                }\r\n                onClick={() => setActiveTutorial(tutorial, index)}\r\n                key={index}\r\n              >\r\n                {tutorial.title}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n\r\n        <button\r\n          className=\"m-3 btn btn-sm btn-danger\"\r\n          onClick={removeAllTutorials}\r\n        >\r\n          Remove All\r\n        </button>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        {currentTutorial ? (\r\n          <div>\r\n            <h4>Tutorial</h4>\r\n            <div>\r\n              <label>\r\n                <strong>Title:</strong>\r\n              </label>{\" \"}\r\n              {currentTutorial.title}\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <strong>Description:</strong>\r\n              </label>{\" \"}\r\n              {currentTutorial.description}\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <strong>Status:</strong>\r\n              </label>{\" \"}\r\n              {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n            </div>\r\n\r\n            <Link\r\n              to={\"/tutorials/\" + currentTutorial.id}\r\n              className=\"badge badge-warning\"\r\n            >\r\n              Edit\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Tutorial...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default TutorialsList;","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddTutorial from \"./components/AddTutorial\";\nimport Tutorial from \"./components/Tutorial\";\nimport TutorialsList from \"./components/TutorialsList\";\n\nfunction App() {    \n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <a href=\"/tutorials\" className=\"navbar-brand\">\n            My CRUD\n          </a>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/tutorials\"} className=\"nav-link\">\n                Tutorials\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialsList} />\n            <Route exact path=\"/add\" component={AddTutorial} />\n            <Route path=\"/tutorials/:id\" component={Tutorial} />\n          </Switch>\n        </div>\n      </div>\n    );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.unregister();\n"],"sourceRoot":""}